@page "/Tecnicos/Create"

@rendermode InteractiveServer
@inject TecnicoService tecnicoService
@inject NavigationManager navigation

<PageTitle> Nuevo Técnico</PageTitle>
<EditForm Model="tecnico" OnValidSubmit="Crear">
    <DataAnnotationsValidator />
    <div class="container"></div>
    <div class="card shadow-lg">
        <div class="card-header bg-danger text-white text-center bi bi-person-add fs-1">
            <h2>Agregar técnico</h2>
        </div>
        <div class="card-body">
            <label for="id" class="form-label">ID</label>
            <InputNumber id="id" class="form-control" @bind-Value="tecnico.tecnicoId" readonly></InputNumber>

            <label for="nombre" class="form-label">Nombre Técnico</label>
            <InputText id="nombre" class="form-control" @bind-Value="tecnico.nombreTecnico"></InputText>
            <ValidationMessage For="@(() => tecnico.nombreTecnico)"></ValidationMessage>

            <label for="sueldoHora" class="form-label">Sueldo Hora</label>
            <InputNumber id="sueldoHora" class="form-control" @bind-Value="tecnico.sueldoHora"></InputNumber>
            <ValidationMessage For="@(() => tecnico.sueldoHora)"></ValidationMessage>
        </div>
        <div class="card-footer">
            <button type="button" class="btn btn-secondary bi bi-box-arrow-in-left" @onclick="Volver"> </button>
            <button type="submit" class="btn btn-danger bi bi-person-fill-down "></button>
        </div>
    </div>
</EditForm>

@code {
    public Tecnicos tecnico { get; set; } = new Tecnicos();

    public async Task Crear()
    {

        if (!await tecnicoService.Existe(tecnico.tecnicoId))
        {
            await tecnicoService.Insertar(tecnico);
            tecnico = new Tecnicos();
            navigation.NavigateTo("/Tecnicos/Index");
        }
        else
        {
        }
    }

    public void Volver()
    {
        navigation.NavigateTo("/Tecnicos/Index");
    }
}