@page "/Tecnicos/Index"
@rendermode InteractiveServer
@inject TecnicoService tecnicoService
@inject TipoTecnicoService tipoTecnicoService
@inject NavigationManager navigation

<PageTitle>T&eacute;cnicos</PageTitle>
<div class="container">
	<div class="card shadow-lg">
		<div class="card-header bg-primary text-white text-center">
			<h2> <strong>Registro t&eacute;cnicos <i class="T&eacute;cnicos bi bi-person-rolodex fs-1" /></strong></h2>
		</div>
		<div class="row">
			@*Filtrar*@
			<div class="col-md-3">
				<label for="filtro" class="form-label btn btn-no-color bi bi-funnel fs-6"><strong>Filtrar por:</strong></label>
				<InputSelect id="filtro" class="form-select" @bind-Value="Filtro">
					<option value="id">ID</option>
					<option value="Nombre">NombreTecnico</option>
					<option value ="Descripcion">Descripci&oacute;n</option>
					<option value="SueldoHora">SueldoHora</option>
				</InputSelect>
			</div>

			@*Buscar*@
			<div class="col-md-6">
				<label for="valorFiltro" class="form-label text-white btn btn-no-color bi bi-search text-danger "></label>
				<div class="input-group">
					<InputText id="valorFiltro" @bind-Value="ValorFiltro" class="form-control" placeholder="Buscar" />
					<button @onclick="Buscar" class="btn btn-outline-primary bi bi-search" type="button"> Buscar</button>
				</div>
			</div>
		</div>

		<div class="card-body">
			<a href="/Tecnicos/Create" class="btn btn-outline-primary bi bi-plus-square mt-3"> Crear</a>
			<table class="table table-hover text-center mt-3">
				<thead class="table table-striped text-black ">
					<tr>
						@*TecnicoId*@
						<th>ID</th>
						@*NombreTecnico*@
						<th>Nombre t&eacute;cnico</th>
						@*DescripcionTipoTecnico*@
						<th>Descripcion</th>
						@*SueldoHora*@
						<th>Sueldo hora</th>
						<th>Opciones</th>
					</tr>
				</thead>
				<tbody>
					@foreach (var tecnico in Tecnico)
					{
						<tr class = "text-center align-middle" >
							<td>@tecnico.TecnicoId</td>
							<td>@tecnico.NombreTecnico</td>
							<td>@tecnico.TipoTecnico.Descripcion</td>
							<td>@($"{tecnico.SueldoHora:C}")</td>

							<td>
								<a href="/Tecnicos/Details/@tecnico.TecnicoId" class="btn btn-outline-primary bi bi-eye"></a>
								<a href="/Tecnicos/Edit/@tecnico.TecnicoId" class="btn btn-outline-primary bi bi-pencil-square"></a>
								<a href="/Tecnicos/Delete/@tecnico.TecnicoId" class="btn btn-outline-danger bi bi-person-x"></a>
							</td>
						</tr>
					}
				</tbody>
			</table>
			<div class="card-footer">
				<label class="ms-3"><strong>Cantidad:</strong> @Tecnico.Count</label>
				@if (Busqueda)
				{
					<button type="button" class="btn btn-outline-secondary bi bi-arrow-left mt-3" @onclick="Volver"> Volver</button>

				}
			</div>
		</div>
	</div>
</div>

@code {
	public List<Tecnicos> Tecnico = new List<Tecnicos>();
	public string Filtro = "id";
	public string ValorFiltro = "";
	public bool Busqueda = false;

	protected override async Task OnInitializedAsync()
	{
		Tecnico = await tecnicoService.Listar(t => true);
	}

	public async Task Buscar()
	{
		if (!string.IsNullOrWhiteSpace(ValorFiltro))
		{
			switch (Filtro)
			{
				case "id":
					if (int.TryParse(ValorFiltro, out int id))
					{
						Tecnico = await tecnicoService.Listar(c => c.TecnicoId == id);
					}
					break;

				case "Nombre":
					Tecnico = await tecnicoService.Listar(c => c.NombreTecnico.ToLower().Equals(ValorFiltro.ToLower()));
					break;

				case "SueldoHora":
					if (float.TryParse(ValorFiltro, out float SueldoHora))
					{
						Tecnico = await tecnicoService.Listar(c => c.SueldoHora == SueldoHora);
					}
					break;
				case "Descripcion":
					Tecnico = await tecnicoService.Listar(c => c.TipoTecnico.Descripcion.ToLower().Contains(ValorFiltro.ToLower()));
					break;

			}
			Busqueda = true;
		}
		else
		{
			Volver();
		}
	}

	public async Task Volver()
	{
		Tecnico = await tecnicoService.Listar(t => true);
		Busqueda = false;
	}
}