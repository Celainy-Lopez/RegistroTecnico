@page "/Tecnicos/Index"
@rendermode InteractiveServer
@inject TecnicoService tecnicoService
@inject NavigationManager navigation

<PageTitle>T&eacute;cnicos</PageTitle>
<div class="container">
	<div class="card-header bg-danger text-white text-center">
		<h2 class="T&eacute;cnicos">Registro de t&eacute;cnicos</h2>
	</div>
	<div class="row">
		@*Filtrar*@
		<div class="col-md-3">
			<label for="filtro" class="form-label btn btn-no-color text-danger bi bi-funnel-fill fs-6">Filtrar por:</label>
			<InputSelect id="filtro" class="form-select" @bind-Value="Filtro">
				<option value="id">ID</option>
				<option value="Nombre">NombreTecnico</option>
				<option value="SueldoHora">SueldoHora</option>
			</InputSelect>
		</div>

		@*Buscar*@
		<div class="col-md-6">
			<label for="valorFiltro" class="form-label text-white btn btn-no-color bi bi-search text-danger "></label>
			<div class="input-group">
				<InputText id="valorFiltro" @bind-Value="ValorFiltro" class="form-control" placeholder="Buscar" />
				<button @onclick="Buscar" class="btn btn-no-color bi bi-search text-danger" type="button"> </button>
			</div>
		</div>
	</div>

	<div class="card-body">
		<table class="table table-light table-bordered">
			<thead class="table table-striped text-center bg-danger text-white">
				<tr>
					@*Id*@
					<th>ID</th>
					@*NombreTecnico*@
					<th>Nombre t&eacute;cnico</th>
					@*SueldoHora*@
					<th>Sueldo hora</th>
					<th>Ver</th>
					<th>Editar</th>
					<th>Eliminar</th>
				</tr>
			</thead>
			<tbody>
				@foreach (var tecnico in Tecnico)
				{
					<tr>
						<td class="text-center">@tecnico.TecnicoId</td>
						<td class="text-center">@tecnico.NombreTecnico</td>
						<td class="text-center">@tecnico.SueldoHora</td>

						<td class="text-center">
							<a href="/Tecnicos/Details/@tecnico.TecnicoId" class="btn btn-no-color text-danger bi bi-eye-fill"></a>
						</td>
						<td class="text-center">
							<a href="/Tecnicos/Edit/@tecnico.TecnicoId" class="btn btn-no-color text-danger bi bi-pencil-square"></a>
						</td>
						<td class="text-center">
							<a href="/Tecnicos/Delete/@tecnico.TecnicoId" class="btn btn-no-color text-danger bi bi-person-x"></a>
						</td>
					</tr>
				}
			</tbody>
		</table>
		<div class="card-footer">
			@if (Busqueda)
			{
				<button type="button" class="btn btn-secondary bi bi-box-arrow-in-left mt-3" @onclick="Volver"> </button>

			}
			<a href="/Tecnicos/Create" class="btn btn-danger bi bi-plus-square-fill mt-3"> </a>
		</div>
	</div>
</div>

@code {
	public List<Tecnicos> Tecnico = new List<Tecnicos>();
	public string Filtro = "id";
	public string ValorFiltro = "";
	public bool Busqueda = false;

	protected override async Task OnInitializedAsync()
	{
		Tecnico = await tecnicoService.Listar(t => true);
	}

	public async Task Buscar()
	{
		if (!string.IsNullOrWhiteSpace(ValorFiltro))
		{
			switch (Filtro)
			{
				case "id":
					if (int.TryParse(ValorFiltro, out int id))
					{
						Tecnico = await tecnicoService.Listar(c => c.TecnicoId == id);
					}
					break;

				case "Nombre":
					Tecnico = await tecnicoService.Listar(c => c.NombreTecnico.ToLower().Contains(ValorFiltro.ToLower()));
					break;

				case "SueldoHora":
					if (float.TryParse(ValorFiltro, out float SueldoHora))
					{
						Tecnico = await tecnicoService.Listar(c => c.SueldoHora == SueldoHora);
					}
					break;
			}
			Busqueda = true;
		}
		else
		{
			Volver();
		}
	}

	public async Task Volver()
	{
		Tecnico = await tecnicoService.Listar(t => true);
		Busqueda = false;
	}
}