@page "/Tecnicos/Delete/{TecnicoId:int}"
@rendermode InteractiveServer
@inject TecnicoService tecnicoService
@inject NavigationManager navigation

<PageTitle>Eliminar t&eacute;cnicos</PageTitle>
<EditForm Model="Tecnico" OnValidSubmit="EliminarTecnico">
	<DataAnnotationsValidator />
	<div class="container">
		<div class="card shadow-lg">
			<div class="card-header bg-primary text-white text-center">
				<h2><strong>Eliminar t&eacute;cnico <i class="bi bi-person-x"></i></strong></h2>
			</div>
			<div class="card-body">
				@if (Tecnico.NombreTecnico != null && Tecnico.SueldoHora != null)
				{
					<h6><strong>¿Seguro que deseas eliminar este t&eacute;cnico?</strong></h6>
					@*Id*@
					<p class="mb-0"><strong>Tecnico ID:</strong> @Tecnico.TecnicoId</p>
					<div class="mb-1">
						@*NombreTecnico*@
						<p class="mb-0"><strong>Nombre t&eacute;cnico:</strong> @Tecnico.NombreTecnico</p>
						<div class="mb-1">
							@*SueldoHora*@
							<p class="mb-0"><strong>Sueldo hora:</strong> @($"{Tecnico.SueldoHora:C}")</p>
							<div class="mb-1">
							</div>
						</div>

						<div class="card-footer">
							<a href="/Tecnicos/Index"
							   class="btn btn-outline-secondary">
								<span class="bi bi-arrow-left mt-3"></span> Volver
							</a>
							<button type="button" class="btn btn-outline-danger bi bi-trash" @onclick=EliminarTecnico> Eliminar</button>
						</div>
					</div>
				}
			</div>
		</div>
	</div>
</EditForm>



@code {

	[Parameter]
	public int TecnicoId { get; set; }
	public Tecnicos Tecnico { get; set; } = new Tecnicos();

	protected override async Task OnInitializedAsync()
	{
		if (TecnicoId > 0)
		{
			Tecnico = (await tecnicoService.Buscar(TecnicoId));
		}

	}

	public async Task EliminarTecnico()
	{
		var eliminar = await tecnicoService.Eliminar(Tecnico.TecnicoId);

		if (eliminar)
		{
			navigation.NavigateTo("/Tecnicos/Index");
		}

	}

}