@page "/Prioridades/CreatePrioridad"
@rendermode InteractiveServer
@inject PrioridadService prioridadService
@inject NavigationManager navigationManager
@inject IJSRuntime js

<PageTitle>Nueva prioridad</PageTitle>
<EditForm Model="Prioridad" OnValidSubmit="Crear">
    <DataAnnotationsValidator />
    <div class="container">
        <div class="card shadow-lg">
            <div class="card-header bg-danger text-white text-center">
                <h2><strong>Crear prioridad</strong> <i class="bi bi-plus-circle-fill fs-2" /></h2>
            </div>
            <div class="card-body">
                @*PrioridadId*@
                <label for="id" class="form-label"> <strong>Prioridad ID</strong></label>
                <InputNumber id="id" class="form-control" @bind-Value="Prioridad.PrioridadId" readonly></InputNumber>
                <ValidationMessage For="@(() =>Prioridad.PrioridadId)"></ValidationMessage>

                @*DescripcionPrioridad*@
                <label for="descripcionPrioridad" class="form-label"><strong>Descripci&oacute;n prioridad</strong></label>
                <InputText id="descripcionPrioridad" class="form-control" @bind-Value="Prioridad.DescripcionPrioridad" placeholder="Urgente, alta, baja" @onfocus="() => ErrorMessage = string.Empty"> </InputText>
                <ValidationMessage For="@(() => Prioridad.DescripcionPrioridad)"></ValidationMessage>
                @if (!string.IsNullOrEmpty(ErrorMessage))
                {
                    <div class="alert-danger bi-exclamation-triangle-fill ">@ErrorMessage</div>

                }

                @*Tiempo*@
                <label for="id" class="form-label"> <strong>Tiempo</strong></label>
                <InputNumber id="id" class="form-control" @bind-Value="Prioridad.Tiempo" placeholder="60 minutos"></InputNumber>
                <ValidationMessage For="@(() =>Prioridad.Tiempo)"></ValidationMessage>



            </div>
            <div class="card-footer">
                <a href="/Prioridades/IndexPrioridad"
                   class="btn btn-outline-secondary">
                    <span class="bi bi-arrow-left mt-3"></span> Volver
                </a>
                <button type="submit" class="btn btn-outline-success bi bi-floppy"> Guardar</button>
            </div>
        </div>
    </div>
</EditForm>

@code {
    public Prioridades Prioridad { get; set; } = new Prioridades();
    public string ErrorMessage { get; set; }

    public async Task Crear()
    {

        if (await prioridadService.ValidarPrioridad(Prioridad.DescripcionPrioridad))
        {
            ErrorMessage = "La prioridad existe. Por favor, elija otra.";
        }
        else
        {
            await prioridadService.Guardar(Prioridad);
            Prioridad = new Prioridades();
            navigationManager.NavigateTo("/Prioridades/IndexPrioridad");
            
        }
    }
}
