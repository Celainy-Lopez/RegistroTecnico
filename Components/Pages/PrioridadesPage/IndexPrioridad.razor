@page "/Prioridades/IndexPrioridad"
@rendermode InteractiveServer
@inject PrioridadService prioridadService
@inject NavigationManager navigation

<PageTitle>Lista prioridades</PageTitle>
<div class="container">
	<div class="card shadow-lg">
		<div class="card-header bg-primary text-white text-center">
			<h2 class="Prioridades"><strong>Registro prioridades</strong> <i class="bi bi-journal-bookmark-fill fs-2" /></h2>
		</div>

		<div class="card-body">
			@*labels*@
			<div class="row">

				@*Filtrar por*@
				<div class="col-3">
					<label for="filtro" class="col-form-label"><strong>Filtrar por</strong></label>
				</div>

				@*ValorFiltro*@
				<div class="col-4">
					<label for="valorFiltro" class="col-form-label"><strong>B&uacute;squeda</strong></label>
				</div>

			</div>

			@*Inputs y botones*@
			<div class="row align-items-center">
				@*Filtrar*@
				<div class="col-md-3">
					<InputSelect id="filtro" class="form-select" @bind-Value="Filtro">
						<option value="" selected disabled>Elija una opci&oacute;n</option>
						<option value="id">ID</option>
						<option value="Descripcion">Descripcion</option>
					</InputSelect>
				</div>

				@*Buscar*@
				<div class="col-md-6">
					<div class="input-group">
						<InputText id="valorFiltro" @bind-Value="ValorFiltro" class="form-control" placeholder="Buscar" />
						<button @onclick="Buscar" class="btn btn-outline-primary bi bi-search" type="button"> Buscar</button>
					</div>
				</div>

				@*Restablecer*@
				<div class="col-3">
					<button type="button" class="btn btn-outline-secondary bi bi-arrow-counterclockwise"
							@onclick="Restablecer">
					</button>
				</div>

			</div>

			<a href="/Prioridades/CreatePrioridad" class="btn btn-outline-primary bi bi-plus-square mt-3"> Crear</a>
			<table class="table table-light  table-hover">
				<thead class="table table-striped text-center ">
					<tr>
						@*Id*@
						<th>Prioridad ID</th>
						@*Descripcion*@
						<th>Descripci&oacute;n prioridad</th>
						@*Tiempo*@
						<th>Tiempo</th>
						<th>Opciones</th>
					</tr>
				</thead>
				<tbody>
					@foreach (var prioridad in Prioridad)
					{
						<tr class="text-center">
							<td>@prioridad.PrioridadId</td>
							<td>@prioridad.DescripcionPrioridad</td>
							<td>@TimeSpan.FromMinutes((double)prioridad.Tiempo).ToString(@"hh\:mm\:ss")</td>
							<td class="text-center">
								<a href="/Prioridades/DetailsPrioridad/@prioridad.PrioridadId" class="btn btn-outline-primary bi bi-eye"></a>
								<a href="/Prioridades/EditPrioridad/@prioridad.PrioridadId" class="btn btn-outline-primary bi bi-pencil-square"></a>
								<a href="/Prioridades/DeletePrioridad/@prioridad.PrioridadId" class="btn btn-outline-danger bi bi-trash"></a>
							</td>
						</tr>
					}
				</tbody>
			</table>
		</div>
		<div class="card-footer">
			<label class="ms-3"><strong>Cantidad:</strong> @Prioridad.Count</label>
		</div>
	</div>
</div>

@code {
	public List<Prioridades> Prioridad = new List<Prioridades>();
	public string Filtro = "";
	public string ValorFiltro = "";

	protected override async Task OnInitializedAsync()
	{
		Prioridad = await prioridadService.Listar(t => true);
	}

	public async Task Buscar()
	{
		if (!string.IsNullOrWhiteSpace(ValorFiltro))
		{
			switch (Filtro)
			{
				case "id":
					if (int.TryParse(ValorFiltro, out int id))
					{
						Prioridad = await prioridadService.Listar(c => c.PrioridadId == id);
					}
					break;

				case "Descripcion":
					Prioridad = await prioridadService.Listar(c => c.DescripcionPrioridad.ToLower().Equals(ValorFiltro.ToLower()));
					break;

			}
		}
	}

	private async Task Restablecer()
	{
		Prioridad = await prioridadService.Listar(e => e.PrioridadId > 0);
		Filtro = string.Empty;
		ValorFiltro = string.Empty;
	}

}

