@page "/TiposTecnicos/CreateTipoTecnico"
@rendermode InteractiveServer
@inject  TipoTecnicoService tipoTecnicoService
@inject NavigationManager navigationManager
@inject IJSRuntime js

<PageTitle>Nuevo tipo t&eacute;cnico</PageTitle>
<EditForm Model="TipoTecnico" OnValidSubmit ="Crear">
    <DataAnnotationsValidator />
        <div class="container"></div>
        <div class="card shadow-lg">
        <div class="card-header bg-danger text-white text-center">
            <h2><strong>Crear tipo t&eacute;cnico</strong> <i class="bi bi-plus-circle-fill fs-2" /></h2>
            </div>
            <div class="card-body">
                @*TipoTecnicoId*@
            <label for="id" class="form-label"> <strong>Tipo tecnico ID</strong></label>
                <InputNumber id="id" class="form-control" @bind-Value="TipoTecnico.TipoTecnicoId" readonly></InputNumber>

                @*Descripcion*@
            <label for="descripcion" class="form-label"><strong>Descripci&oacute;n</strong></label>
            <InputText id="descripcion" class="form-control" @bind-Value="TipoTecnico.Descripcion" placeholder="Reparaci&oacute;n" @onfocus="() => ErrorMessage = string.Empty"></InputText>
                <ValidationMessage For="@(() => TipoTecnico.Descripcion)"></ValidationMessage>
                @if (!string.IsNullOrEmpty(ErrorMessage))
                {
                    <div class="alert-danger bi-exclamation-triangle-fill ">@ErrorMessage</div>
                }

            </div>
            <div class="card-footer">
                <button type="button" class="btn btn-secondary bi bi-box-arrow-in-left" @onclick="Volver"> </button>
            <button type="submit" class="btn btn-danger bi bi-sort-down"></button>
            </div>
        </div>
</EditForm>

@code {
    public TiposTecnicos TipoTecnico { get; set; } = new TiposTecnicos();
    public string ErrorMessage { get; set; }

    public async Task Crear()
    {
        if (await tipoTecnicoService.ValidarTipoTecnico(TipoTecnico.Descripcion))
        {
            ErrorMessage = "Descripción registrada. Ingrese una distinta ";
        }
        else
        {
            await tipoTecnicoService.Guardar(TipoTecnico);
            TipoTecnico = new TiposTecnicos();
            navigationManager.NavigateTo("/TiposTecnicos/IndexTipoTecnico");
        }
    }

    public void Volver()
    {
        navigationManager.NavigateTo("/TiposTecnicos/IndexTipoTecnico");
    }
}
